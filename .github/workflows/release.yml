# This workflow will build and test the repository and create release artifacts
#
# BOF
---
name: Continuous Delivery Release
run-name: "Continuous Delivery (CD) creating release"
on:
  push:
    branches:    
    - main
    paths-ignore:
    - '**.md'
jobs:
  # --------------------------------------------
  build:
    name: Artifact build
    strategy:
      matrix:
        operatingSystem: [ubuntu-24.04]
        nodeVersion: [20]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    #
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        cd node
        npm ci
    - name: Validate
      run: |
        cd node
        npm run validate
    - name: Format
      run: |
        cd node
        npm run format
    - name: Run Unit Tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd node
        npm run test
    - name: Calculate Version
      id: build-version
      uses: davekpatrick/action-release-version@main # temporary, use main branch for latest
      with:
        tagPrefix: ''
        apiToken: ${{ secrets.GITHUB_TOKEN }}
    - name: Build Version
      run: |
        cd node
        npm version ${{ steps.build-version.outputs.versionTag }} 
    - name: Compile
      run: |
        cd node
        npm run build
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}_release_${{ steps.build-version.outputs.versionTag }}
        if-no-files-found: error
        path: |
          node/dist/
          node/package-lock.json
          README.md
          action.yml
    outputs:
      versionTag: ${{ steps.build-version.outputs.versionTag }}
  # --------------------------------------------
  test:
    name: Artifact Release
    strategy:
      matrix:
        operatingSystem: [ubuntu-24.04]
        nodeVersion: [20]
      fail-fast: false
    needs: [ build ]
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v5
      with:
        name: ${{ github.event.repository.name }}_release_${{ needs.build.outputs.versionTag }}
    - name: Validate
      if: ${{ runner.os != 'Windows' }}
      run: |
        node --version
        ls -lR
    - name: Validate
      if: ${{ runner.os == 'Windows' }}
      shell: powershell
      run: |
        & node --version
        Get-ChildItem -Recurse
    - name: Release
      uses: davekpatrick/action-release-create@main
      with:
        versionTag: ${{ needs.build.outputs.versionTag }}
...
# EOF

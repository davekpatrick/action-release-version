# This workflow will build and test the repository and create release artifacts
#
# BOF
---
name: Continuous Delivery
run-name: "Continuous Delivery (CD)"
on:
  push:
    branches:    
    - main
    paths-ignore:
    - '**.md'
env:
  operatingSystem: "[ubuntu-22.04, macos-12, windows-2022]"

jobs:
  # --------------------------------------------
  build:
    name: Artifact build
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04, macos-12, windows-2022]
        nodeVersion: [12,16,18]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        cd node
        npm install
    - name: Compile
      run: |
        cd node
        npm run build
    - name: Upload Build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.operatingSystem }}-${{ matrix.nodeVersion }}-build
        if-no-files-found: error 
        path: |
          node/dist/
          node/package-lock.json
          README.md
          action.yml
    - name: Upload Test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.operatingSystem }}-${{ matrix.nodeVersion }}-tests
        if-no-files-found: error 
        path: |
          tests/
  # --------------------------------------------
  test:
    name: Artifact Test
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04, macos-12, windows-2022]
        nodeVersion: [12,16,18]
    needs: [ build ]
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v4.1.7
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.operatingSystem }}-node-${{ matrix.nodeVersion }}
        path: node/dist/
    - name: Validate
      if: ${{ runner.os != 'Windows' }}
      run: |
        node --version
        cd node/dist/
        ls -lR
    - name: Validate
      if: ${{ runner.os == 'Windows' }}
      shell: powershell
      run: |
        & node --version
        Set-Location -Path node/dist/
        Get-ChildItem -Recurse
    - name: Execute 
      uses: ./
      with:
        apiToken: ${{ secrets.GITHUB_TOKEN }}
...
# EOF
